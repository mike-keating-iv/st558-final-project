---
title: "Modeling"
format: html
Author: Mike Keating
---

## Introduction

In our EDA of the diabetes dataset, we explored the potential impact of socioeconomic variables such as income bracket, education level, and cost barriers to medical care.

The dataset includes variables related to:

-   **Health history:** High blood pressure, high cholesterol, stroke, heart disease
-   **Lifestyle habits:** Physical activity, smoking, alcohol consumption, diet
-   **Demographics:** Sex, age, education, income

Our goal in this modeling section is to create a classification model to predict whether or not someone has diabetes. In addition to these socioeconomic variables we will include variables we suspect are more directly related to health such as BMI and physical activity.

### Data

```{r warning=FALSE, message=FALSE}
# Dependencies
library(tidyverse)
library(tidymodels)
library(ggplot2)

# Load data
diabetes <- read_csv("data/diabetes_binary_health_indicators_BRFSS2015.csv", 
                     show_col_types = FALSE)
diabetes <- diabetes |> 
  mutate(Income = factor(Income, 
                         levels = 1:8, 
                         labels = c("LT $10k", "$10-15k", "$15-20k", "$20-25k", "$25-35k",
                                    "$35-50k", "$50-75k", "GT $75k")),
         Education = factor(Education,
                            levels = 1:6,
                            labels = c("None", "Elementary", "Some HS", "HS Graduate", 
                                       "Some College", "College Graduate")),
         NoDocbcCost = factor(NoDocbcCost,
                              levels = 0:1,
                              labels = c("No Barrier", "Cost Barrier")),
         Diabetes_binary = factor(Diabetes_binary,
                                  levels = 0:1,
                                  labels = c("Nondiabetic", "Diabetic")),
         PhysActivity = factor(PhysActivity,
                               levels = 0:1,
                               labels = c("No", "Yes"))) |>
  select(Diabetes_binary, Income, Education, NoDocbcCost, BMI, PhysActivity)

```

### Test Train Split

```{r}
# Set Seed
set.seed(123)

# Split into test and train sets
diabetes_split <- diabetes |> initial_split(prop=0.7)
train <- training(diabetes_split)
test <- testing(diabetes_split)
```

### Logistic Regression

### Classification Tree

### Random Forest

### Final Model Selection
